# Author: Jintao Huang
# Email: hjt_study@qq.com
# Date: 

"""P24 哈希表
1. dict. python的dict会按插入顺序进行排序
2. list. int -> Any. (特殊情况：int不重复且范围较小. 例如学号)
3. 思想是：空间换时间

四种操作与时间复杂度
1. 访问 access X
2. 搜索 search O(1). 碰撞的话 O(k)
3. 插入 insert O(1). 碰撞的话 O(k)
4. 删除 delete O(1). 碰撞的话 O(k)

常用操作:
1. 创建 数组长度 是否为空
2. 访问(搜索) 添加 删除 修改 key是否存在
3. 遍历

题：217 389 496(栈+hashMap)
"""


"""P30 集合
特点：
1. 无序, 不重复

四种操作与时间复杂度
1. 访问 access X
2. 搜索 search O(1). hash冲突的话 O(k)
3. 插入 insert O(1). hash冲突的话 O(k)
4. 删除 delete O(1). hash冲突的话 O(k)

常用操作:
1. 创建 数组长度 是否为空
2. 访问(搜索/是否存在) 添加 删除
3. 遍历

题：217 705
"""


"""P35 树
树概念：
1. 树描述父子关系
2. 专业名词：结点、根结点、叶子结点
3. 其他概念：高度(2 1 0)、深度(0 1 2)、层(1 2 3)

二叉树概念：
1. 普通二叉树：每个结点最多2个孩子
2. 满二叉树：每层都装满了
3. 完全二叉树：相比满二叉树，完全二叉树少了最底层、最右边的一些连续叶子结点

二叉树的遍历：
1. 前 中 后序.(手算：递归法，局部 -> 整体)
2. 层

题：144 94 145
"""


"""P37 堆
堆概念：
1. 一种完全二叉树的结构，并符合一定的顺序(大/小根)

做到最大堆的方法：
1. 转化为元祖即可. (key(x), x)  # 不需要i
2. 加负号

四种操作与时间复杂度
1. 访问 access X
2. 搜索(堆顶) search O(1)
3. 插入 insert O(LogN). 上滤
4. 删除 delete O(LogN). 下滤
5. 建堆 O(N). 持续下滤


常用操作:
1. 创建 长度 是否为空
2. 访问(顶) 添加 删除
3. 遍历

题：215 692
"""


"""P44 图
图的概念：
1. 顶点
- 无向图: 边；度
- 有向图: 弧；入度, 出度
- 权重图

"""